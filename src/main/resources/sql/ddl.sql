--DROP SCHEMA IF EXISTS MangaApp CASCADE;
CREATE SCHEMA MangaApp;

CREATE TYPE reaction AS ENUM ('like', 'dislike');
CREATE TYPE user_status AS ENUM ('full_active', 'muted', 'banned');
CREATE TYPE manga_status AS ENUM ('approved', 'disapproved');

--DROP SCHEMA IF EXISTS MangaApp CASCADE;
CREATE SCHEMA MangaApp;

--DROP TABLE MangaApp.USERS;
CREATE TABLE MangaApp.USERS
(
    id       bigint              NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nickname VARCHAR(255)        NOT NULL,
    password VARCHAR(255)        NOT NULL,
    email    VARCHAR(255) UNIQUE NOT NULL,
    image    bytea,
    updated  timestamp DEFAULT NULL,
    PRIMARY KEY (id)
);

--DROP TABLE MangaApp.ROLE;
CREATE TABLE MangaApp.ROLE
(
    id   smallint     NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(255) not null,
    PRIMARY KEY (id)
);

--DROP TABLE MangaApp.USER_ROLE;
CREATE TABLE MangaApp.USER_ROLE
(
    user_id bigint   NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    role_id smallint NOT NULL,
    CONSTRAINT pk_UserRole PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES MangaApp.USERS (id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES MangaApp.ROLE (id) ON DELETE CASCADE
);
--DROP TABLE MangaApp.CREATOR;
CREATE TABLE MangaApp.CREATOR
(
    id          int CHECK (id > 0) NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name        VARCHAR(255)       NOT NULL,
    description varchar(1000) DEFAULT '',
    PRIMARY KEY (id)
);

CREATE TABLE MangaApp.MANGA
(
    id                     int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    manga_name             VARCHAR(255) NOT NULL,
    author_id              int          NOT NULL,
    artist_id              int          NOT NULL,
    release_year           smallint              DEFAULT 1722,
    translator_id          int          NOT NULL,
    alternative_manga_name VARCHAR(255)          DEFAULT NULL,
    add_datetime           timestamp    NOT NULL DEFAULT NOW(),
    update_datetime        timestamp    NOT NULL DEFAULT NOW(),
    approval_datetime      timestamp             DEFAULT NULL,
    preview_image_path     VARCHAR(255) NOT NULL,
    is_approved            boolean      NOT NULL DEFAULT FALSE,
    PRIMARY KEY (id),
    FOREIGN KEY (author_id) REFERENCES MangaApp.CREATOR (id),
    FOREIGN KEY (artist_id) REFERENCES MangaApp.CREATOR (id),
    FOREIGN KEY (translator_id) REFERENCES MangaApp.USERS (id)
);

-- --DROP TABLE MangaApp.MANGA_CHAPTER;
-- CREATE TABLE MangaApp.MANGA_CHAPTER
-- (
--     id                bigint CHECK (id > 0) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     chapter_name      VARCHAR(255)                                           NOT NULL,
--     related_manga_id  int                                                    NOT NULL,
--     number_of_chapter smallint CHECK (number_of_chapter > 0)                 NOT NULL,
--     chapter_path      varchar(255)                                           NOT NULL,
--     add_datetime      timestamp                                              NOT NULL,
--     PRIMARY KEY (id),
--     FOREIGN KEY (related_manga_id) REFERENCES MangaApp.MANGA (id) ON DELETE CASCADE
-- );
--
-- -- DROP TABLE MangaApp.BOOKMARK;
-- CREATE TABLE MangaApp.BOOKMARK
-- (
--     id         bigint CHECK (id > 0) NOT NULL GENERATED BY DEFAULT AS IDENTITY,
--     user_id    int                   NOT NULL,
--     chapter_id int                   NOT NULL,
--     manga_id   int                   NOT NULL,
--     PRIMARY KEY (id),
--     FOREIGN KEY (user_id) REFERENCES MangaApp.USERS (id),
--     FOREIGN KEY (manga_id) REFERENCES MangaApp.MANGA (id),
--     FOREIGN KEY (chapter_id) REFERENCES MangaApp.MANGA_CHAPTER (id)
-- );
--
--
-- --DROP TABLE MangaApp.COMMENT;
-- CREATE TABLE MangaApp.COMMENT
-- (
--     id                 bigint CHECK (id > 0) NOT NULL GENERATED BY DEFAULT AS IDENTITY,
--     content_of_comment VARCHAR(9999)         NOT NULL,
--     related_manga_id   int                   NOT NULL,
--     sender_id          int                   NOT NULL,
--     send_date_time     timestamp             NOT NULL,
--     PRIMARY KEY (id),
--     FOREIGN KEY (related_manga_id) REFERENCES MangaApp.MANGA (id) ON DELETE CASCADE,
--     FOREIGN KEY (sender_id) REFERENCES MangaApp.USERS (id) ON DELETE CASCADE
-- );
--
-- --DROP TABLE MangaApp.COMMENT_MARK;
-- CREATE TABLE MangaApp.COMMENT_MARK
-- (
--     comment_id bigint CHECK (comment_id > 0) NOT NULL,
--     user_id    int                           NOT NULL,
--     mark       reaction                      NOT NULL,
--     CONSTRAINT pk_comment_mark PRIMARY KEY (comment_id, user_id),
--     FOREIGN KEY (comment_id) REFERENCES MangaApp.COMMENT (id) ON DELETE CASCADE,
--     FOREIGN KEY (user_id) REFERENCES MangaApp.USERS (id) ON DELETE CASCADE
--
-- );
--
-- --DROP TABE MangaApp.USER_DISABLE
-- CREATE TABLE MangaApp.USER_DISABLE
-- (
--     id             bigint CHECK (id > 0)                         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
--     disable_reason VARCHAR(255)                                  NOT NULL,
--     disable_start  TIMESTAMP                                     NOT NULL,
--     disable_end    TIMESTAMP CHECK (disable_start < disable_end) NOT NULL
-- );
